<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gb.mapper.SponsorMapper">
  <resultMap id="BaseResultMap" type="com.gb.po.Sponsor">
    <id column="sponsorNo" jdbcType="INTEGER" property="sponsorNo" />
    <result column="eventNo" jdbcType="INTEGER" property="eventNo" />
    <result column="companyNo" jdbcType="INTEGER" property="companyNo" />
    <result column="money" jdbcType="INTEGER" property="money" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gb.po.Sponsor">
    <result column="demand" jdbcType="LONGVARCHAR" property="demand" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sponsorNo, eventNo, companyNo, money
  </sql>
  <sql id="Blob_Column_List">
    demand
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gb.po.SponsorExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sponsor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gb.po.SponsorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sponsor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sponsor
    where sponsorNo = #{sponsorNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sponsor
    where sponsorNo = #{sponsorNo,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gb.po.SponsorExample">
    delete from sponsor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gb.po.Sponsor">
    insert into sponsor (sponsorNo, eventNo, companyNo, 
      money, demand)
    values (#{sponsorNo,jdbcType=INTEGER}, #{eventNo,jdbcType=INTEGER}, #{companyNo,jdbcType=INTEGER}, 
      #{money,jdbcType=INTEGER}, #{demand,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gb.po.Sponsor">
    insert into sponsor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sponsorNo != null">
        sponsorNo,
      </if>
      <if test="eventNo != null">
        eventNo,
      </if>
      <if test="companyNo != null">
        companyNo,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="demand != null">
        demand,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sponsorNo != null">
        #{sponsorNo,jdbcType=INTEGER},
      </if>
      <if test="eventNo != null">
        #{eventNo,jdbcType=INTEGER},
      </if>
      <if test="companyNo != null">
        #{companyNo,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="demand != null">
        #{demand,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gb.po.SponsorExample" resultType="java.lang.Long">
    select count(*) from sponsor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sponsor
    <set>
      <if test="record.sponsorNo != null">
        sponsorNo = #{record.sponsorNo,jdbcType=INTEGER},
      </if>
      <if test="record.eventNo != null">
        eventNo = #{record.eventNo,jdbcType=INTEGER},
      </if>
      <if test="record.companyNo != null">
        companyNo = #{record.companyNo,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.demand != null">
        demand = #{record.demand,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sponsor
    set sponsorNo = #{record.sponsorNo,jdbcType=INTEGER},
      eventNo = #{record.eventNo,jdbcType=INTEGER},
      companyNo = #{record.companyNo,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      demand = #{record.demand,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sponsor
    set sponsorNo = #{record.sponsorNo,jdbcType=INTEGER},
      eventNo = #{record.eventNo,jdbcType=INTEGER},
      companyNo = #{record.companyNo,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gb.po.Sponsor">
    update sponsor
    <set>
      <if test="eventNo != null">
        eventNo = #{eventNo,jdbcType=INTEGER},
      </if>
      <if test="companyNo != null">
        companyNo = #{companyNo,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="demand != null">
        demand = #{demand,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sponsorNo = #{sponsorNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gb.po.Sponsor">
    update sponsor
    set eventNo = #{eventNo,jdbcType=INTEGER},
      companyNo = #{companyNo,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      demand = #{demand,jdbcType=LONGVARCHAR}
    where sponsorNo = #{sponsorNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gb.po.Sponsor">
    update sponsor
    set eventNo = #{eventNo,jdbcType=INTEGER},
      companyNo = #{companyNo,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER}
    where sponsorNo = #{sponsorNo,jdbcType=INTEGER}
  </update>
</mapper>